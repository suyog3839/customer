name: Docker Image CI

on:
  push:
    branches: [ "main","develop" ]
  pull_request:
    branches: [ "main","develop" ]
  workflow_dispatch:

jobs:

  DeployDev:
    name: deploy to dev
    if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'localhost:8080'
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # You can use 'zulu' or other distributions if you prefer
          java-version: '17'
      - name: dev deploy b
        run: |
          echo 'deploy to dev'
          mvn clean install
          docker build . --file Dockerfile --tag suyog3839/sp:dev
          echo "dckr_pat_RF4UwbG8eBoUAQgIMwcB-vAbTzo" | docker login -u suyog3839 --password-stdin
          docker push suyog3839/sp:dev
  DeployUat:
    name: deploy to uat
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: uat
      url: 'localhost:8080'
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # You can use 'zulu' or other distributions if you prefer
          java-version: '17'
      - name: uat deploy
        run: |
          echo 'deploy to uat'
           mvn clean install
           docker build . --file Dockerfile --tag suyog3839/sp:dev
           echo "dckr_pat_RF4UwbG8eBoUAQgIMwcB-vAbTzo" | docker login -u suyog3839 --password-stdin
           docker push suyog3839/sp:uat
  DeployProd:
    name: deploy to prod
    needs: DeployUat
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'localhost:8080'
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # You can use 'zulu' or other distributions if you prefer
          java-version: '17'
      - name: prod deploy
        run: |
          echo 'deploy to prod'
          mvn clean install
          docker build . --file Dockerfile --tag suyog3839/sp:dev
          echo "dckr_pat_RF4UwbG8eBoUAQgIMwcB-vAbTzo" | docker login -u suyog3839 --password-stdin
          docker push suyog3839/sp:uat