name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # You can use 'zulu' or other distributions if you prefer
        java-version: '17'
        cache: maven
    - name: Build the Docker image
      run: |
        mvn --version
        mvn clean install
        docker build . --file Dockerfile --tag sp-customer:$(date +%s)
        docker images
  DeployDev:
    name: deploy to dev
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'localhost:8080'
    steps:
      - name: dev deploy
        run: echo 'deploy to dev'
  DeployUat:
    name: deploy to uat
    if: github.event.ref == 'main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: uat
      url: 'localhost:8080'
    steps:
      - name: uat deploy
        run: echo 'deploy to uat'
  DeployProd:
    name: deploy to prod
    needs: DeployUat
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'localhost:8080'
    steps:
      - name: prod deploy
        run: echo 'deploy to prod'
